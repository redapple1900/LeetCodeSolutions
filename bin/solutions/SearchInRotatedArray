public class SearchInRotatedArray {
    public int search(int[] A, int target) {
        int position = findPivot(A,0,A.length-1);
        if (position >0)
        return Math.max(findValue(A,0,position-1,target),findValue(A,position,A.length-1,target));
        else 
        return findValue(A,0,A.length-1,target);
    }
    private int findPivot(int[] array,int start,int end){
        int i=0;
        for (i=1;i<array.length;i++)
            if ((array[i]-array[i-1])<0) 
                break;
        return i;
    }
    private int findValue(int[] array,int start,int end,int target){
        if (start>end) return -1;
        else if (start==end) return array[start]==target?start:-1;
        else {
            int mid = (start+end)/2;
            if (array[mid]==target) return mid;
            else return Math.max(findValue(array,start,mid-1,target),findValue(array,mid+1,end,target));
        }
    }
    
}
