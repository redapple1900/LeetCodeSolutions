public class PalindromePartitionII{
       
    public int minCut(String s) {
        
        if (s==null||s.length()==0) return 0;
        
        int length=s.length();
        
        boolean[][] palindrome= new boolean[length][length];
        
        for (int i=0;i<length;i++)
            Arrays.fill(palindrome[i],false);
            
        int[] results = new int[length];
        
        for (int start=length-1;start>=0;start--){
            results[start]=length-start-1;
            for (int end=start;end<length;end++){
                if (s.charAt(start)==s.charAt(end)){
                    if (end-start<2)
                        palindrome[start][end]=true;
                    else 
                        palindrome[start][end]=palindrome[start+1][end-1];
                }
                if (palindrome[start][end])
                    if (end==length-1)
                        results[start]=0;
                    else
                    results[start]=Math.min(results[start],results[end+1]+1);
            }
        }
        return results[0];
  }
}
